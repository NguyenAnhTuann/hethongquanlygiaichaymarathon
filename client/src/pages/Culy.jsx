import { useEffect, useState } from "react";
import axios from "axios";

export default function Culy() {
    const [list, setList] = useState([]);
    const [form, setForm] = useState({
        tenculy: "",
        thoigian_xuatphat: "",
        diadiem_taptrung: "",
    });
    const [editId, setEditId] = useState(null);

    const api = "http://localhost:5000/api/culy"; // ch√∫ √Ω ƒë√∫ng path route

    useEffect(() => {
        fetchList();
    }, []);

    const fetchList = async () => {
        const res = await axios.get(api);
        setList(res.data);
    };

    const handleChange = (e) => {
        setForm({ ...form, [e.target.name]: e.target.value });
    };

    const handleSubmit = async (e) => {
        e.preventDefault();
        if (editId) {
            await axios.put(`${api}/${editId}`, form);
        } else {
            await axios.post(api, form);
        }
        setForm({ tenculy: "", thoigian_xuatphat: "", diadiem_taptrung: "" });
        setEditId(null);
        fetchList();
    };

    const handleEdit = (item) => {
        setForm(item);
        setEditId(item.ma_culy);
    };

    const handleDelete = async (id) => {
        if (window.confirm("X√°c nh·∫≠n x√≥a c·ª± ly n√†y?")) {
            await axios.delete(`${api}/${id}`);
            fetchList();
        }
    };

    return (
        <div className="p-6">
            <h1 className="text-3xl font-extrabold text-indigo-800 mb-6 uppercase tracking-wide">
                Qu·∫£n l√Ω C·ª± ly thi ƒë·∫•u
            </h1>

            {/* Form nh·∫≠p li·ªáu */}
            <div className="bg-white p-6 rounded-xl shadow-md mb-10 max-w-3xl">
                <form onSubmit={handleSubmit} className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <input
                        name="tenculy"
                        placeholder="T√™n c·ª± ly"
                        value={form.tenculy}
                        onChange={handleChange}
                        className="p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-400"
                        required
                    />
                    <input
                        type="time"
                        name="thoigian_xuatphat"
                        value={form.thoigian_xuatphat}
                        onChange={handleChange}
                        className="p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-400"
                        required
                    />
                    <input
                        name="diadiem_taptrung"
                        placeholder="ƒê·ªãa ƒëi·ªÉm t·∫≠p trung"
                        value={form.diadiem_taptrung}
                        onChange={handleChange}
                        className="md:col-span-2 p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-400"
                        required
                    />
                    <button
                        type="submit"
                        className="md:col-span-2 bg-indigo-600 text-white py-3 rounded-lg hover:bg-indigo-700 transition-all duration-200 font-semibold"
                    >
                        {editId ? "C·∫≠p nh·∫≠t c·ª± ly" : "Th√™m m·ªõi c·ª± ly"}
                    </button>
                </form>
            </div>

            {/* B·∫£ng danh s√°ch */}
            <div className="overflow-x-auto">
                <table className="min-w-full bg-white rounded-xl shadow-md border">
                    <thead className="bg-indigo-100 text-indigo-800 uppercase text-sm font-semibold">
                        <tr>
                            <th className="p-3 border">M√£</th>
                            <th className="p-3 border">T√™n c·ª± ly</th>
                            <th className="p-3 border">Th·ªùi gian xu·∫•t ph√°t</th>
                            <th className="p-3 border">ƒê·ªãa ƒëi·ªÉm t·∫≠p trung</th>
                            <th className="p-3 border">H√†nh ƒë·ªông</th>
                        </tr>
                    </thead>
                    <tbody>
                        {list.map((item) => (
                            <tr key={item.ma_culy} className="hover:bg-gray-50">
                                <td className="p-3 border text-center">{item.ma_culy}</td>
                                <td className="p-3 border">{item.tenculy}</td>
                                <td className="p-3 border">{item.thoigian_xuatphat}</td>
                                <td className="p-3 border">{item.diadiem_taptrung}</td>
                                <td className="p-3 border text-center space-x-2">
                                    <button
                                        onClick={() => handleEdit(item)}
                                        className="inline-flex items-center bg-yellow-400 hover:bg-yellow-500 text-white px-3 py-1 rounded-full shadow-sm transition-all duration-200"
                                    >
                                        ‚úèÔ∏è <span className="ml-1">S·ª≠a</span>
                                    </button>
                                    <button
                                        onClick={() => handleDelete(item.ma_culy)}
                                        className="inline-flex items-center bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded-full shadow-sm transition-all duration-200"
                                    >
                                        üóëÔ∏è <span className="ml-1">X√≥a</span>
                                    </button>
                                </td>

                            </tr>
                        ))}
                        {list.length === 0 && (
                            <tr>
                                <td colSpan={5} className="text-center py-6 text-gray-500">
                                    Kh√¥ng c√≥ d·ªØ li·ªáu
                                </td>
                            </tr>
                        )}
                    </tbody>
                </table>
            </div>
        </div>
    );
}
